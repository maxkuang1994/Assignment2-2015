<!-- {{#each data}}
<p>{{dataTitle}}</p>
<a href={{dataLink}}>
<img src={{dataPicture}}></img></a>
{{/each}} -->

<style type="text/css">
body {
  background-color: #cc4d2d;
background-image: url(http://www.transparenttextures.com/patterns/bright-squares.png);

   margin: 0 auto;
   width: 75%;
   font-family: Consolas, sans-serif;
   font-size: 1.5em;
   color: #454545;
   font-weight: bold;
   text-align: center;
}

svg {
   stroke: #000000;
     stroke-width: 3px;
     stroke-opacity:0.4;
   fill: #ffffff;

}
text{
   stroke-width: 0.5px;
   stroke: #000000;
   fill: #000000;
}

circle {
   fill: #FF8533;
   stroke-width: 5px;
      stroke:#FF8533;

}

circle#aa{-webkit-animation: color_change 1s infinite alternate;
		   -moz-animation: color_change 1s infinite alternate;  
		   -ms-animation: color_change 1s infinite alternate;  
		   -o-animation: color_change 1s infinite alternate;  
		   animation: color_change 1s infinite alternate;  }

@-webkit-keyframes color_change {
		  from { background-color: blue; }
		  to { background-color: red; }
		}
		@-moz-keyframes color_change {
		  from { background-color: blue; }
		  to { background-color: red; }
		}
		@-ms-keyframes color_change {
		  from { background-color: blue; }
		  to { background-color: red; }
		}
		@-o-keyframes color_change {
		  from { background-color: blue; }
		  to { background-color: red; }
		}
		@keyframes color_change {
		  from { background-color: blue; }
		  to { background-color: red; }
		}


circle:hover {
   fill: #f24e17;
   stroke-width: 10px;
   stroke:#f24e17;

}
</style>




<script type="text/javascript">






var width = 960,
    height = 750;

//  Create a projection of the US
//var projection = d3.geo.albersUsa()
  //  .scale(1000)
   // .translate([width/2, height/2]);

    var projection = d3.geo.transverseMercator()
		.rotate([117, -33])
		.scale(4000);

var path = d3.geo.path().projection(projection);

// Create the SVG that state paths and location points will be attached to
var d3_map = d3.select("body").append("svg:svg")
  .attr("width", width)
  .attr("height", height)
  .attr("style","text-align:center");

// Create a 'g' element within the SVG which state paths will be attached to
var states = d3_map.append("svg:g")
  .attr("class", "states");
        
var locations = d3_map.append("svg:g")
  .attr("class", "locations");

// Read the paths of the states from a JSON file
// Attach the paths of the states to #states within the SVG

// Note: normally this data would be read from a .json file



var mapFeatures = d3.json("/css/map.json", function (collection) {
    states.selectAll("path")
      .data(collection.features)
      .enter().append("path")
      .attr("d", path); 
 });
var coordinate =[];
coordinate.coordinates = [];


/*
var coordinates = [
  {"label": "San Francisco, CA", 
   "coordinates": [-122.4183, 37.7750]},
  {"label": "New York, NY", "coordinates": [-74.0064, 40.714]},
  {"label": "Austin, TX", "coordinates": [-97.7428, 30.266]},
  {"label": "Chicago, IL", "coordinates": [-87.65, 41.85]},
  {"label": "St. Louis, MO", "coordinates": [-90.1977778, 38.6272222]},
  {"label": "Portland, OR", "coordinates": [-122.675, 45.5236111]},
  {"label": "Miami, FL", "coordinates": [-80.1938889, 25.7738889]},
  {"label": "Denver, CO", "coordinates": [-104.98619, 39.73925]},
  {"label": "Lawrence, KS", "coordinates": [-95.235, 38.9716667]},
];
 
*/



{{#each yelpResults}}

 var coordinates=[];
  console.log({{longitude}}+","+{{latitude}});

  coordinate.push({
       label:"LA",
       coordinates:[{{longitude}},{{latitude}}],
       });

{{/each}}

  console.log(coordinate[0]);


var tooltip = d3.selectAll("body")
							.append("circle")
							.style("position", "absolute")
							.style("z-index", "50")
							.style("visibility", "hidden")
							.text("a simple tooltip");

var locations = d3.select(".locations").selectAll('circle')

  .data(coordinate)

locations.enter().append("svg:circle")
    .attr("cy", function(d) { return projection(d.coordinates)[1];})
	.attr("cx", function(d) { return projection(d.coordinates)[0];})
    .attr("id", function(d) { return "aa"})
    .attr("r", 4.5)
    .on("mouseover", function(d){return tooltip.text(d.label).style("visibility","visible").style("background","#ffffff").style("opacity","0.8");})
							.on("mousemove", function(){return tooltip.style("top", (event.pageY-10)+"px").style("left",(event.pageX+10)+"px");})
							.on("mouseout", function(){return tooltip.style("visibility", "hidden");})
							
    </script>
                                                          
